@charset "UTF-8";

/* SpryFormValidation.css - Revision: Spry Preview Release 1.4 */

/* Copyright (c) 2006. Adobe Systems Incorporated. All rights reserved. */


/* These are the classes applied on the error messages
 * which prevent them from being displayed by default.
 */ 
.textfieldRequiredMsg1, 
.textfieldInvalidFormatMsg1, 
.textfieldMinValueMsg1,
.textfieldMaxValueMsg1,
.textfieldMinCharsMsg1,
.textfieldMaxCharsMsg1,
.textfieldValidMsg1 {
	display: none;
}

/* These selectors change the way messages look when the widget is in one of the error states.
 * These classes set a default red border and color for the error text.
 * The state class (e.g. .textfieldRequiredState) is applied on the top-level container for the widget,
 * and this way only the specific error message can be shown by setting the display property to "inline".
 */
.textfieldRequiredState1 .textfieldRequiredMsg1, 
.textfieldInvalidFormatState1 .textfieldInvalidFormatMsg1, 
.textfieldMinValueState1 .textfieldMinValueMsg1,
.textfieldMaxValueState1 .textfieldMaxValueMsg1,
.textfieldMinCharsState1 .textfieldMinCharsMsg1,
.textfieldMaxCharsState1 .textfieldMaxCharsMsg1
{
	display: inline;
	color: #CC3333;	
	font-size:10px;
}



/* The next three group selectors control the way the core element (INPUT) looks like when the widget is in one of the states: * focus, required / invalid / minValue / maxValue / minChars / maxChars , valid 
 * There are two selectors for each state, to cover the two main usecases for the widget:
 * - the widget id is placed on the top level container for the INPUT
 * - the widget id is placed on the INPUT element itself (there are no error messages)
 */
 
 /* When the widget is in the valid state the INPUT has a green background applied on it. */
.textfieldValidState1 input, input.textfieldValidState1 {
	background-color: #66CCCC;
}

/* When the widget is in an invalid state the INPUT has a red background applied on it. */
input.textfieldRequiredState1, .textfieldRequiredState1 input, 
input.textfieldInvalidFormatState1, .textfieldInvalidFormatState1 input, 
input.textfieldMinValueState1, .textfieldMinValueState1 input, 
input.textfieldMaxValueState1, .textfieldMaxValueState1 input, 
input.textfieldMinCharsState1, .textfieldMinCharsState1 input, 
input.textfieldMaxCharsState1, .textfieldMaxCharsState1 input {
	background-color: #none;
}

/* When the widget has received focus, the INPUT has a yellow background applied on it. */
.textfieldFocusState input1, input.textfieldFocusState1 {
	background-color: #FFFFCC;
}

/* This class applies only for a short period of time and changes the way the text in the textbox looks like.
 * It applies only when the widget has character masking enabled and the user tries to type in an invalid character.
 */
.textfieldFlashText input1, input.textfieldFlashText1{
	color: blue !important;
}
